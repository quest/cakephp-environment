{"name":"cakephp-environment","tagline":"Environment Plugin for CakePHP","body":"# Environment Plugin for CakePHP #\r\n\r\nfor CakePHP 2.x\r\n\r\n## Requirement ##\r\n\r\n* PHP version: PHP 5.2+\r\n* CakePHP version: 2.x Stable\r\n\r\n## Installation ##\r\n\r\n* Clone/Copy the files in this diectory into `app/Plugin/Environment`\r\n* Ensure the plugin is loaded in `app/Config/bootstrap.php` by calling `CakePlugin::load('Environment', array('bootstrap' => true))`\r\n\r\n### Using Composer ###\r\n\r\nAdd the plugin to your project's `composer.json` - something like this:\r\n\r\n```composer\r\n\t{\r\n\t    \"require\": {\r\n\t        \"quest/cakephp-environment\": \"master\"\r\n\t    }\r\n\t}\r\n```\r\n\r\nBecause this plugin has the type `cakephp-plugin` set in its own `composer.json`, Composer will install it inside your `/Plugins` directory, rather than in the usual vendors file. It is recommended that you add `/Plugins/Environment` to your .gitignore file. (Why? [read this](http://getcomposer.org/doc/faqs/should-i-commit-the-dependencies-in-my-vendor-directory.md).)\r\n\r\n### Manual ###\r\n\r\n* Download this: [http://github.com/quest/cakephp-environment/zipball/master](http://github.com/quest/cakephp-environment/zipball/master)\r\n* Unzip that download.\r\n* Copy the resulting folder to `app/Plugin`\r\n* Rename the folder you just copied to `Environment`\r\n\r\n### GIT Submodule ###\r\n\r\nIn your app directory type:\r\n\r\n```bash\r\n  git submodule add -b master git://github.com/quest/cakephp-environment.git Plugin/Environment\r\n  git submodule init\r\n  git submodule update\r\n```\r\n\r\n### GIT Clone ###\r\n\r\nIn your `Plugin` directory type:\r\n\r\n```bash\r\n    git clone -b master git://github.com/quest/cakephp-environment.git Environment\r\n```\r\n\r\n## Enable plugin ##\r\n\r\nIn 2.0 you need to enable the plugin in your `app/Config/bootstrap.php` file:\r\n\r\n```php\r\n    CakePlugin::load('Environment', array('bootstrap' => true));\r\n```\r\n\r\n## Usage ##\r\n\r\nCreate file `app/Config/env.php` with this example content.\r\n\r\n```php\r\n\t/**\r\n\t * Domains environments\r\n\t * IMPORTANT: This lines on the top of the file\r\n\t */\r\n\t\tConfigure::write('Environment.domains', array(\r\n\t\t\t'development' => '.*',\r\n\t\t\t'production' => '^(.+\\.)?mysite\\.com$'\r\n\t\t));\r\n\r\n\t/**\r\n\t * Development settings\r\n\t */\r\n\t\tEnvironment::write(array(\r\n\t\t\t'debug' => 2,\r\n\t\t\t'Security.salt' => '6978hjkhKjkhskjhd698KGNSLdsDLsdKSAsdf8778sdfg',\r\n\t\t\t'Security.cipherSeed' => '57283694289374902834892039823756894'\r\n\t\t), 'development');\r\n\r\n\t/**\r\n\t * Production settings\r\n\t */\r\n\t\tEnvironment::write(array(\r\n\t\t\t'debug' => 0\r\n\t\t), 'production');\r\n```\r\n\r\n### Environment Detection ###\r\n\r\nIn order to detect the project environment and apply their settings, use the application hostname, just like this:\r\n\r\n\r\n```php\r\n\tConfigure::write('Environment.domains', array(\r\n\t\t'development' => '^myapp\\.local$',\r\n\t\t'production' => '^mycapp\\.com$'\r\n\t));\r\n```\r\n\r\nYou must use regex to define the hostname. You can create many environments as you want.\r\n\r\n### Methods ###\r\n\r\n#### Environment::get() ####\r\n\r\nGet the current environment depending on hostname requested:\r\n\r\n```php\r\n\techo Environment::get(); // print 'development' text\r\n```\r\n\r\n#### Environment::set(string $environment) ####\r\n\r\nAvoid set the environment based on hostname request, by using `set()` method. It will overwrite any other environment previously settled.\r\n\r\n```php\r\n\tEnvironment::set('testing'); // true\r\n```\r\n\r\n#### Environment::is(string $environment) ####\r\n\r\nUse this method to check the current/working environment.\r\n\r\n```php\r\n\tif (Environment::is('development')) {\r\n\t\techo 'this is development';\r\n\t}\r\n\telse {\r\n\t\techo 'this is ' . Environment::get();\r\n\t}\r\n```\r\n\r\n#### Environment::write() ####\r\n\r\nYou can write environment settings by using the `write()` method in two ways:\r\n\r\nMultiple\r\n\r\n```php\r\n\tEnvironment::write(array(\r\n\t\t'debug' => 2,\r\n\t\t'database' => array(\r\n\t\t\t'login' => 'root',\r\n\t\t\t'host' => 'localhost',\r\n\t\t\t'password' => '',\r\n\t\t)\r\n\t), 'development');\r\n```\r\n\r\nSingle\r\n\r\n```php\r\n\tEnvironment::write('debug', 0, 'production');\r\n```\r\n\r\n#### Environment::read() ####\r\n\r\nRead environment settings by using the `read()` method:\r\n\r\n* $key: Key to find\r\n* $environment: Optional — Environment scope\r\n\r\n```php\r\n\t// databases.php\r\n\tclass DATABASE_CONFIG {\r\n\r\n\t\tpublic $default = array(\r\n\t\t\t'datasource' => 'Database/Mysql',\r\n\t\t\t'persistent' => false,\r\n\t\t\t'host' => Environment::read('database.host'),\r\n\t\t\t'login' => Environment::read('database.login'),\r\n\t\t\t'password' => Environment::read('database.password'),\r\n\t\t\t'database' => 'database_name',\r\n\t\t\t'prefix' => '',\r\n\t\t\t'encoding' => 'utf8',\r\n\t\t);\r\n\t}\r\n```\r\n\r\n`Environment::write()` also can be used to update or modify Cake's `app/Config/core.php` file settings. For example:\r\n\r\n```php\r\n\t/**\r\n\t * Development settings\r\n\t */\r\n\t\tEnvironment::write(array(\r\n\t\t\t'debug' => 2,\r\n\t\t\t'Security.salt' => '6978hjkhKjkhskjhd698KGNSLdsDLsdKSAsdf8778sdfg',\r\n\t\t\t'Security.cipherSeed' => '57283694289374902834892039823756894'\r\n\t\t), 'development');\r\n\r\n\t/**\r\n\t * Production settings\r\n\t */\r\n\t\tEnvironment::write(array(\r\n\t\t\t'debug' => 0,\r\n\t\t\t'Security.salt' => '6978hjkhKjkhskjhd698KGNSLdsDLsdKSAsdf8778sdfg',\r\n\t\t\t'Security.cipherSeed' => '57283694289374902834892039823756894'\r\n\t\t), 'production');\r\n```\r\n\r\n## TODO ##\r\n\r\n\r\n## Support ##\r\n\r\nTo report bugs or request features, please visit the [Issue Tracker](https://github.com/quest/cakephp-environment/issues).\r\n\r\n## Contributing to this Plugin ##\r\n\r\nPlease feel free to contribute to the plugin with new issues, requests, unit tests and code fixes or new features. If you want to contribute some code, create a feature branch from develop, and send us your pull request. Unit tests for new features and issues detected are mandatory to keep quality high.\r\n\r\n## License ##\r\n\r\nCopyright 2014, [Victor San Martín](http://twitter.com/questchile)\r\n\r\nLicensed under [The MIT License](http://www.opensource.org/licenses/mit-license.php)<br/>\r\nRedistributions of files must retain the above copyright notice.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}